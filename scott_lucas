/* WorkSpace Question Set 1 */
/* QUESTION_1
Create a query that lists each movie,
film category it is classified in,
number of times it has been rented out.
* Film title
* Category name
* Count of Rentals */
SELECT
  fm.title film_title,
  cat.name catergory_name,
  COUNT(rent.rental_date) AS number_rentals
FROM film fm
JOIN film_category filmct
  ON fm.film_id = filmct.film_id
JOIN category cat
  ON filmct.category_id = cat.category_id
JOIN inventory inv
  ON fm.film_id = inv.film_id
JOIN rental rent
  ON inv.inventory_id = rent.inventory_id
WHERE cat.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY 1,
         2
ORDER BY 2, 1;

/* QUESTION_2
length of rental duration compares to duration all movies rented for.
provide a table with titles and divide them into 4 levels
(first_quarter, second_quarter, third_quarter, and final_quarter)
* film_category,
* film tables to answer this and the next questions.*/
SELECT
  fm.title film_title,
  cat.name category_name,
  fm.rental_duration rental_duration,
  NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
FROM film fm
JOIN film_category filmct
  ON fm.film_id = filmct.film_id
JOIN category cat
  ON filmct.category_id = cat.category_id
JOIN inventory inv
  ON fm.film_id = inv.film_id
JOIN rental rent
  ON inv.inventory_id = rent.inventory_id
WHERE cat.name = 'Animation'
OR cat.name = 'Children'
OR cat.name = 'Classics'
OR cat.name = 'Comedy'
OR cat.name = 'Family'
OR cat.name = 'Music'
GROUP BY 1,
         2,
         3
ORDER BY 3;

/* QUESTION_3
provide table with the family-friendly film category,
each quartile, and corresponding count movies within each cat. for each ren duration cat.
* Category
* Rental length category
* Count  */
SELECT
  category_name,
  standard_quartile,
  COUNT(standard_quartile) rental_count
FROM (SELECT
  fm.title film_title,
  cat.name category_name,
  fm.rental_duration rental_duration,
  NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
FROM film fm
JOIN film_category filmct
  ON fm.film_id = filmct.film_id
JOIN category cat
  ON filmct.category_id = cat.category_id
WHERE cat.name = 'Animation'
OR cat.name = 'Children'
OR cat.name = 'Classics'
OR cat.name = 'Comedy'
OR cat.name = 'Family'
OR cat.name = 'Music'
GROUP BY 1,
         2,
         3) T1
GROUP BY 1,
         2
ORDER BY 1, 2;


/* WorkSpace Question Set 2 */

/* QUESTION_1
find out how the two stores compare in rental orders
every month for all the years we have data for
store ID, year and month, COUNT rental orders each store fulfilled
* column for: year, month,
* store ID
* count of rental orders fulfilled during that month. */
SELECT
  DATE_PART('year', rent.rental_date) AS year,
  DATE_PART('month', rent.rental_date) AS month,
  str.store_id,
  COUNT(*) AS num_rentals
FROM store str
JOIN staff stf
  ON str.store_id = stf.store_id
JOIN rental rent
  ON stf.store_id = rent.staff_id
GROUP BY 1,
         2,
         3
ORDER BY 4 DESC;

/* QUESTION_2
Who were our top 10 paying customers
how many payments made on a monthly basis during 2007,
what was the amount of the monthly payments.
* capture the customer name,
* month and year of payment,
* total payment amount for each month top 10 paying customers? */

WITH top_customers AS
  (SELECT
    cust.customer_id,
    CONCAT(cust.first_name, ' ', cust.last_name) AS full_name,
    SUM(pay.amount) total_payment
  FROM customer cust
  JOIN payment pay
    ON cust.customer_id = pay.customer_id
  GROUP BY 1,
           2
  ORDER BY 3 DESC
  LIMIT 10)
  SELECT
    DATE_TRUNC('month', pay.payment_date) AS payment_month,
    full_name,
    COUNT(pay.amount) AS payment_count,
    SUM(pay.amount) AS total_payment
  FROM top_customers
  JOIN customer cust
    ON top_customers.customer_id = cust.customer_id
  JOIN payment pay
    ON cust.customer_id = pay.customer_id
  WHERE pay.payment_date BETWEEN '2007-01-01' AND '2008-01-01'
  GROUP BY 1,
           2
  ORDER BY 2

/* QUESTION_3
difference across monthly payments during 2007.
compare the payment amounts in each successive month.
Repeat for each 10 paying customers.
identify the customer who paid the most difference
* Eleanor Hunt - $64.87 - March 2007 from $22.95 in February of 2007. */
WITH top_customers AS
  (SELECT
  cust.customer_id,
  CONCAT(cust.first_name, ' ', cust.last_name) AS full_name,
  SUM(pay.amount) total_payment
FROM customer cust
JOIN payment pay
  ON cust.customer_id = pay.customer_id
GROUP BY 1,
         2
ORDER BY 3 DESC
LIMIT 10)
SELECT
  DATE_TRUNC('month', pay.payment_date) AS payment_month,
  full_name,
  SUM(pay.amount) AS total_payment,
  LEAD(SUM(pay.amount)) OVER (PARTITION BY full_name ORDER BY DATE_TRUNC('month', pay.payment_date)) AS next_payment,
  LEAD(SUM(pay.amount)) OVER (PARTITION BY full_name ORDER BY DATE_TRUNC('month', pay.payment_date)) - SUM(pay.amount) AS payment_difference
FROM top_customers
JOIN customer cust
  ON top_customers.customer_id = cust.customer_id
JOIN payment pay
  ON cust.customer_id = pay.customer_id
WHERE pay.payment_date BETWEEN '2007-01-01' AND '2008-01-01'
GROUP BY 1,
         2
ORDER BY 1,2
